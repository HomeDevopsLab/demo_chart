{{- if and .Values.volumes.enabled .Values.database.createdb -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-preinstall"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
        - name: pre-install-job
          image: devkrolikowski/swiss-army-knife:0.0.12
          env:
          - name: WEBSITE_DIR
            value: "/storage/{{ .Release.Name }}"
          - name: DB_ADMIN_LOGIN
            valueFrom:
              secretKeyRef: 
                name: k3s-db-admin
                key: dblogin
          - name: DB_ADMIN_PASS
            valueFrom:
              secretKeyRef: 
                name: k3s-db-admin
                key: dbpassword
          - name: APPDB_NAME
            value: {{ .Release.Name }}
          - name: APPDB_LOGIN
            valueFrom:
              secretKeyRef: 
                name: {{ .Release.Name }}-db
                key: login
          - name: APPDB_PASS
            valueFrom:
              secretKeyRef: 
                name: {{ .Release.Name }}-db
                key: password
          - name: DB_HOST
            value: {{ .Values.database.server }}
          volumeMounts:
            - mountPath: /storage
              name: {{ .Release.Name }}-volume
          command: ["/bin/sh"]
          args:
            - -c
            -|
              /bin/mkdir ${WEBSITE_DIR}
              /usr/bin/mysql -u ${DB_ADMIN_LOGIN} -p${DB_ADMIN_PASS} -h ${DB_HOST} -e "CREATE DATABASE ${APPDB_NAME};"
              /usr/bin/mysql -u ${DB_ADMIN_LOGIN} -p${DB_ADMIN_PASS} -h ${DB_HOST} -e "CREATE USER '${APPDB_LOGIN}'@'%' IDENTIFIED BY '${APPDB_PASS}';"
              /usr/bin/mysql -u ${DB_ADMIN_LOGIN} -p${DB_ADMIN_PASS} -h ${DB_HOST} -e "GRANT ALL ON ${APPDB_NAME}.* TO '${APPDB_LOGIN}'@'%';"
      volumes:
        - name: {{ .Release.Name }}-volume
          {{- if hasKey .Values.volumes.type "nfs" }}
          {{- with .Values.volumes.type.nfs }}
          nfs:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}   
{{- end }}